import memoize from 'memoizee';
import { ethers } from 'ethers';
import BigNumber from 'bignumber.js';
import { DictInterface, IStats } from './interfaces';
export declare const MAX_ALLOWANCE: ethers.BigNumber;
export declare const BN: (val: number | string) => BigNumber;
export declare const toBN: (n: ethers.BigNumber, decimals?: number) => BigNumber;
export declare const toStringFromBN: (bn: BigNumber, decimals?: number) => string;
export declare const fromBN: (bn: BigNumber, decimals?: number) => ethers.BigNumber;
export declare const isEth: (address: string) => boolean;
export declare const getEthIndex: (addresses: string[]) => number;
export declare const _getCoinAddresses: (...coins: string[] | string[][]) => string[];
export declare const _getCoinDecimals: (...coinAddresses: string[] | string[][]) => number[];
export declare const _getBalances: (coins: string[], addresses: string[]) => Promise<DictInterface<string[]>>;
export declare const _prepareAddresses: (addresses: string[] | string[][]) => string[];
export declare const getBalances: (coins: string[], ...addresses: string[] | string[][]) => Promise<DictInterface<string[]> | string[]>;
export declare const _getAllowance: (coins: string[], address: string, spender: string) => Promise<ethers.BigNumber[]>;
export declare const getAllowance: (coins: string[], address: string, spender: string) => Promise<string[]>;
export declare const hasAllowance: (coins: string[], amounts: string[], address: string, spender: string) => Promise<boolean>;
export declare const _ensureAllowance: (coins: string[], amounts: ethers.BigNumber[], spender: string) => Promise<string[]>;
export declare const ensureAllowanceEstimateGas: (coins: string[], amounts: string[], spender: string) => Promise<number>;
export declare const ensureAllowance: (coins: string[], amounts: string[], spender: string) => Promise<string[]>;
export declare const getPoolNameBySwapAddress: (swapAddress: string) => string;
export declare const _getUsdPricesFromApi: () => Promise<DictInterface<number>>;
export declare const _getUsdRate: (assetId: string) => Promise<number>;
export declare const _getFactoryStatsUrl: () => string;
export declare const _getStatsUrl: (isCrypto?: boolean) => string;
export declare const _getStats: ((statsUrl: string) => Promise<IStats>) & memoize.Memoized<(statsUrl: string) => Promise<IStats>>;
export declare const _getFactoryStatsEthereum: ((statsUrl: string) => Promise<IStats>) & memoize.Memoized<(statsUrl: string) => Promise<IStats>>;
export declare const _getFactoryStatsPolygon: ((statsUrl: string) => Promise<IStats>) & memoize.Memoized<(statsUrl: string) => Promise<IStats>>;
export declare const getPoolList: () => string[];
export declare const getFactoryPoolList: () => string[];
export declare const getCryptoFactoryPoolList: () => string[];
export declare const getUsdRate: (coin: string) => Promise<number>;
export declare const getTVL: (chainId?: number) => Promise<number>;
